version: "3"

services:
  rima-postgres:
    image: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=interest_miner_db
      - POSTGRES_USER=interest_miner
      - POSTGRES_PASSWORD=interest_miner
    volumes:
      - rima-postgres:/var/lib/postgresql/data/
    networks:
      - rima-webserver

  rima-redis:
    image: docker.io/bitnami/redis:latest
    restart: on-failure
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    volumes:
      - rima-redis:/bitnami/redis/data
    networks:
      - rima-webserver

  rima-backend:
    image: rima-backend
    build:
      context: ./RIMA-Backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    # command: bin/web
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - REDIS_HOST=rima-redis
      - POSTGRES_DB=interest_miner_db
      - POSTGRES_USER=interest_miner
      - POSTGRES_HOST=rima-postgres
      - POSTGRES_PASSWORD=interest_miner
    env_file:
      - configuration-dev.env
    ports:
      - "8000:8000"
    volumes:
      - ./RIMA-Backend:/app
    depends_on:
      - rima-postgres
      - rima-redis
    networks:
      - rima-webserver
      - rima-webapp

  rima-worker:
    image: rima-backend
    build:
      context: ./RIMA-Backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    # command: bin/worker-dev
    command: sh -c 'python3 -m celery worker --app=interest_miner_api -l info -P eventlet'
    environment:
      - REDIS_HOST=rima-redis
      - POSTGRES_DB=interest_miner_db
      - POSTGRES_USER=interest_miner
      - POSTGRES_HOST=rima-postgres
      - POSTGRES_PASSWORD=interest_miner
    env_file:
      - configuration-dev.env
    volumes:
      - ./RIMA-Backend:/app
    depends_on:
      - rima-backend
      - rima-postgres
      - rima-redis
    networks:
      - rima-webserver
      - rima-webapp

  rima-frontend:
    image: rima-frontend
    build:
      context: ./RIMA-Frontend/nodejs
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    stdin_open: true
    environment:
      - REACT_APP_BASE_URL=http://localhost:8000
      - REACT_APP_BASE_URL_INTEREST=http://localhost:8000/api/interests/
      - REACT_APP_TOKEN=cdf895267756d954747b63b9cc56e23fa06ecd29
    ports:
      - "3000:3000"
    volumes:
      - ./RIMA-Frontend/nodejs/src:/app/src
      - ./RIMA-Frontend/nodejs/public:/app/public
    networks:
      - rima-webapp

networks:
  rima-webapp:
    driver: bridge
  rima-webserver:
    driver: bridge

volumes:
  rima-postgres:
    driver: local
  rima-redis:
    driver: local
