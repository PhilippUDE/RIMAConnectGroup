# Generated by Django 2.2.3 on 2021-09-20 13:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('conferences', '0004_auto_20210920_1522'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author_Event_keyword',
            fields=[
                ('keyword_id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('algorithm', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Author_Event_Topic',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('algorithm', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conf_Event_keyword',
            fields=[
                ('keyword_id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('algorithm', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conf_Event_Topic',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('algorithm', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event_has_Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(null=True)),
                ('conference_event_name_abbr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Topics_Events', to='conferences.Conference_Event')),
                ('topic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hastopics', to='conferences.Conf_Event_Topic')),
            ],
            options={
                'unique_together': {('conference_event_name_abbr', 'topic_id')},
            },
        ),
        migrations.CreateModel(
            name='Event_has_keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(null=True)),
                ('conference_event_name_abbr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords_Events', to='conferences.Conference_Event')),
                ('keyword_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='haskeywords', to='conferences.Conf_Event_keyword')),
            ],
            options={
                'unique_together': {('conference_event_name_abbr', 'keyword_id')},
            },
        ),
        migrations.AddField(
            model_name='conf_event_topic',
            name='conference_event_name_abbr',
            field=models.ManyToManyField(through='conferences.Event_has_Topic', to='conferences.Conference_Event'),
        ),
        migrations.AddField(
            model_name='conf_event_keyword',
            name='conference_event_name_abbr',
            field=models.ManyToManyField(through='conferences.Event_has_keyword', to='conferences.Conference_Event'),
        ),
        migrations.CreateModel(
            name='Author_has_Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(null=True)),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_topics', to='conferences.Author')),
                ('conference_event_name_abbr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference_Event')),
                ('topic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorhastopics', to='conferences.Author_Event_Topic')),
            ],
            options={
                'unique_together': {('author_id', 'topic_id', 'conference_event_name_abbr')},
            },
        ),
        migrations.CreateModel(
            name='Author_has_Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(null=True)),
                ('all_events', models.BooleanField(default=False)),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_keywords', to='conferences.Author')),
                ('conference_event_name_abbr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='conferences.Conference_Event')),
                ('keyword_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorhaskeywords', to='conferences.Author_Event_keyword')),
            ],
            options={
                'unique_together': {('author_id', 'keyword_id', 'conference_event_name_abbr')},
            },
        ),
        migrations.AddField(
            model_name='author_event_topic',
            name='author_id',
            field=models.ManyToManyField(through='conferences.Author_has_Topic', to='conferences.Conference_Event'),
        ),
        migrations.AddField(
            model_name='author_event_keyword',
            name='author_id',
            field=models.ManyToManyField(through='conferences.Author_has_Keyword', to='conferences.Conference_Event'),
        ),
    ]
