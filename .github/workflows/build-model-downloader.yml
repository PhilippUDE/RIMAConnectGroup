name: Build RIMA-Model-Server Image

on:
  push:
    tags:
    - 'v*'
    branches:
    - 'master'
    - 'dev-*'
    - 'dev/*'
    paths:
    - '.github/workflows/build-model-downloader.yml'
    - 'model/downloader'
  pull_request:
    branches:
    - 'master'

env:
  REGISTRY: socialcomputing
  IMAGE:    rima-model-downloader
  CONTEXT:  ./model/downloader

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if:   ${{ env.HAS_REGISTRY == 'true' }}
      uses: docker/login-action@v1
      env:
        HAS_REGISTRY: ${{ secrets.DOCKERHUB_TOKEN != '' }}
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get tagging metadata
      id:   meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Build and push container image
      uses: docker/build-push-action@v2
      with:
        context:    ${{ env.CONTEXT }}
        tags:       ${{ steps.meta.outputs.tags }}
        labels:     ${{ steps.meta.outputs.labels }}
        push:       ${{ github.event_name != 'pull_request' }}
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE }}:buildcache
        cache-to:   type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE }}:buildcache,mode=max
