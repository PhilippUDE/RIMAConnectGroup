name: Build Container Image

on:
  push:
    tags:
    - '*'
    branches:
    - 'master'
    - 'dev-*'
  pull_request:
    branches:
    - 'master'

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get tagging metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: "${{ secrets.DOCKERHUB_USERNAME }}/rima-frontend"
        tags: |
          type=pep440,pattern={{version}}
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push RIMA-Frontend
      uses: docker/build-push-action@v2
      with:
        context: ./RIMA-Frontend
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rima-frontend:buildcache
        cache-to:   type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rima-frontend:buildcache,mode=max

  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get tagging metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: "${{ secrets.DOCKERHUB_USERNAME }}/rima-backend"
        tags: |
          type=pep440,pattern={{version}}
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push RIMA-Backend
      uses: docker/build-push-action@v2
      with:
        context: ./RIMA-Backend
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rima-backend:buildcache
        cache-to:   type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rima-backend:buildcache,mode=max

  build-model-downloader:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get tagging metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: "${{ secrets.DOCKERHUB_USERNAME }}/rima-model-downloader"
        tags: |
          type=pep440,pattern={{version}}
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push RIMA-Model-Downloader
      uses: docker/build-push-action@v2
      with:
        context: ./model/downloader
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rima-model-downloader:buildcache
        cache-to:   type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rima-model-downloader:buildcache,mode=max
