apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    app.kubernetes.io/component: worker
    keel.sh/policy: patch
    keel.sh/match-tag: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/component: worker
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: setup
        image: inko/soco-rima-backend
        command: ['bin/download']
        env:
        - name: GLOVE_MODEL_URL
          value: "http://$(MODEL_SERVER_SERVICE):8080/datatest_word2vec.txt"
        - name: GLOVE_MODEL_FILE_PATH
          value: /tmp/models/datatest_word2vec.txt
        volumeMounts:
        - mountPath: /tmp/models
          name: tmp
      containers:
      - name: worker
        image: inko/soco-rima-backend
        command: ['bin/worker']
        env:
        - name: POSTGRES_HOST
          value: $(DB_SERVICE)
        - name: REDIS_HOST
          value: $(REDIS_SERVICE)
        - name: TEMP_DIR
          value: /tmp
        - name: GLOVE_MODEL_URL
          value: "http://$(MODEL_SERVER_SERVICE):8080/datatest_word2vec.txt"
        - name: GLOVE_MODEL_FILE_PATH
          value: /tmp/models/datatest_word2vec.txt
        envFrom:
        - secretRef:
            name: configuration
        resources:
          requests:
            memory: 1100Mi
            cpu: 100m
          limits:
            memory: 1500Mi
            cpu: 1
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - celery inspect ping -b redis://$REDIS_HOST
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /tmp/models
          name: tmp
      volumes:
      - name: tmp
        emptyDir: {}
